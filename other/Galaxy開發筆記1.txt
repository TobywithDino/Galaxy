2023/02/08
開發遊戲的筆記：
我覺得我寫的很多點都很妙
但大部分都會忘記怎麼說明
所以現在趕快來寫
我剛修正的碰撞受傷害的判定問題

最一開始：
只要enity跟enity碰到就會一直跑進判定迴圈中
(每幀)
所以每幀都會受傷

這很好解決，就給每個實體紀錄受傷時間
只要間隔不到某個時間，就跳過不受傷害
很多遊戲大概都是這樣避免瘋狂掉血（我想不到其他方法了）

接著我漸漸發現另一個問題浮現
若今天有多個entity碰觸到同一個entity(假設player)
照理說player是否要受傷是對於
每個entity分別判斷間隔時間

但照我上述的方法行不通

所以剛剛寫了一個類別colideEntity
當中儲存碰撞資訊(entity和碰撞時間)

讓每個entity都擁有一個colideEntity陣列(預設10個)
才能分別判斷碰撞

讓我很開心的是

寫一次，除了幾個傳入變數和define先後順序的問題
基本上程式結構完全沒問題

原本：
敵人子彈五六個往玩家身上打
因為delay受傷的原因
玩家只受到一次傷害

後來：
玩家碰到幾顆子彈就受傷幾次

除了想達成的目的達到以外

原本很糾結如何讓子彈能夠穿透的問題也解決了
子彈在Galaxy中是一個繼承entity的bullet子類
即上述的所有行為子彈都有

所以子彈有血量(利用hp控制穿透數量)
所以原本糾結的點是(在原本的判定情況)：
若要讓子彈穿透一個entity扣一次血
就要知道子彈的delay時間

但情況太多太複雜
不可能利用更改delayTime達成目的

今天修正完後：
子彈對於每個entity的碰撞判定都獨立
所以只要將delayTime設大一點
就算entity面積再大 子彈也不會在同一個entity身上扣兩次血
(entity不一定只扣一次)
而delayTime不影響子彈與不同的entity碰撞